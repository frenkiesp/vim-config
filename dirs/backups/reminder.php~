<?php if (!defined('ACCESS')) exit('No direct script access allowed');

define('SHIFTS_TABLE', NTS_DB_TABLES_PREFIX.'v3_shifts');
define('USERS_TABLE', NTS_DB_TABLES_PREFIX.'v3_users');
define('LOCATIONS_TABLE', NTS_DB_TABLES_PREFIX.'v3_locations');

class Reminder{

    const SHIFT_STATUS_ACTIVE = 1;

    function __construct($mysqli_connect){
        $this->connection = $mysqli_connect;
    };

    private function getActiveShiftsByDate($date){
        $query = "SELECT * FROM ".SHIFTS_TABLE.",".USERS_TABLE.",".LOCATIONS_TABLE." WHERE "
        .SHIFTS_TABLE.".user_id = ".USERS_TABLE.".id"
        ." AND ".SHIFTS_TABLE.".location_id = ".LOCATIONS_TABLE.".id"
        ." AND status = ".self::SHIFT_STATUS_ACTIVE
        ." AND date = ".$date;
        $result = $this->connection->query($query);
        if($result == false){
            echo "Query error: ".$query;
            $this->log("Query error: ".$query);
            return;
        }
        return $result;
    }

    public function getNextShifts(){
        $today =  date("Ymd");
        //aggiungo al giorno di oggi (giorno del controllo) i giorni di preavviso
        $shift_day = date('Ymd', strtotime("+".DAYS_BEFORE." days"));

        $result = $this->getActiveShiftsByDate($shift_day);
        $shifts = array();
        if($result->num_rows >0)
        {
            while($shift = $result->fetch_array(MYSQLI_ASSOC))
            {
                $shifts[] = $shift;
            }
        }
        $result->close();

        return $shifts;


    }

    public function run(){
        $this->log("reminder launched.");
        $shifts = $this->getNextShifts();
        if(count($shifts) > 0)
        {
            foreach($shifts as $shift)
            {
                $this->notify($shift);
            }
        }
        else{
            $this->log("No active shifts found.");
        }
    }

    private function replacePlaceholders($shift,$text){
        //converte secondi in ora:minuti
        $shift_start=gmdate("H:i", $shift['start']);
        $date = date_create_from_format('Ymd', $shift['date']);
        $shift_date= date_format($date,'d.m.Y');
        $string = str_replace("%START_SHIFT%",$shift_start,$text);
        $string = str_replace("%SHIFT_DATE%",$shift_date,$string);
        $string = str_replace("%USER_NAME%",$shift['first_name'],$string);
        $string = str_replace("%USER_LAST_NAME%",$shift['last_name'],$string);
        $string = str_replace("%SHIFT_LOCATION%",$shift['name'],$string);
        return $string;
    }

    private function notify($shift){
        $email = new Hc_email();
        if(DEBUG_MODE)
            $email->debug = true;
        $subject = $this->replacePlaceholders($shift,EMAIL_SUBJECT);
        $body = $this->replacePlaceholders($shift,EMAIL_BODY);
        $email->setSubject($subject);
        $email->setBody($body);
        $email->setFrom(EMAIL_FROM);
        $email->setFromName(EMAIL_FROM_NAME);
        
        $ret = $email->sendToOne($shift['email']);
        if($ret==false){
            echo $email->getError();
            $this->log($email->getError());
        }

        if(!empty(CHECK_EMAIL)){
            if($ret!=false){
                $subject = "[OK] notifica inviata a ".$shift['first_name']." ".$shift['last_name'];
                $body = "Testo notifica:\n ".$body;
            }else{
                $subject = "[ERRORE] nessuna notifica inviata a ".$shift['first_name']." ".$shift['last_name'];
                $body = "Testo notifica:\n ".$body;
                $body.= "\n\nErrore:\n".$email->getError();
            }
            $email->setSubject($subject);
            $email->setBody($body);
            $email->setFrom(EMAIL_FROM);
            $email->setFromName(EMAIL_FROM_NAME);
        
            $ret = $email->sendToOne(CHECK_EMAIL);
            if($ret==false){
                echo $email->getError();
                $this->log($email->getError());
            }
        }

    }

    private function log($msg){
        //Save string to log, use FILE_APPEND to append.
        $log = date("j-n-Y H:i:")." ".$msg."\n";
        file_put_contents('./log_notifier.txt', $log, FILE_APPEND);
    }
}
?>
